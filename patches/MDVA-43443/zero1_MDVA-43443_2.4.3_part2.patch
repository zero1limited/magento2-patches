--- Filter/DirectiveProcessor/DependDirective.php
+++ Filter/DirectiveProcessor/DependDirective.php
@@ -32,9 +32,13 @@ public function __construct(
     }

     /**
-     * @inheritdoc
+     * @param array $construction
+     * @param Template $filter
+     * @param array $templateVariables
+     *
+     * @return string
      */
-    public function process(array $construction, Template $filter, array $templateVariables): string
+    private function resolve(array $construction, Template $filter, array $templateVariables): string
     {
         if (empty($templateVariables)) {
             // If template processing
@@ -48,6 +52,16 @@ public function process(array $construction, Template $filter, array $templateVa
         }
     }

+    /**
+     * @inheritdoc
+     */
+    public function process(array $construction, Template $filter, array $templateVariables): string
+    {
+        $result = $this->resolve($construction, $filter, $templateVariables);
+
+        return str_replace(['{', '}'], '', (string) $result);
+    }
+
     /**
      * @inheritdoc
      */
--- Filter/DirectiveProcessor/ForDirective.php
+++ Filter/DirectiveProcessor/ForDirective.php
@@ -36,14 +36,13 @@ public function __construct(
     }

     /**
-     * Filter the string as template.
-     *
      * @param array $construction
      * @param Template $filter
      * @param array $templateVariables
+     *
      * @return string
      */
-    public function process(array $construction, Template $filter, array $templateVariables): string
+    private function resolve(array $construction, Template $filter, array $templateVariables): string
     {
         if (!$this->isValidLoop($construction)) {
             return $construction[0];
@@ -67,6 +66,16 @@ public function process(array $construction, Template $filter, array $templateVa
         return $construction[0];
     }

+    /**
+     * @inheritdoc
+     */
+    public function process(array $construction, Template $filter, array $templateVariables): string
+    {
+        $result = $this->resolve($construction, $filter, $templateVariables);
+
+        return str_replace(['{', '}'], '', (string) $result);
+    }
+
     /**
      * Check if the matched construction is valid.
      *
--- Filter/DirectiveProcessor/IfDirective.php
+++ Filter/DirectiveProcessor/IfDirective.php
@@ -32,9 +32,13 @@ public function __construct(
     }

     /**
-     * @inheritdoc
+     * @param array $construction
+     * @param Template $filter
+     * @param array $templateVariables
+     *
+     * @return string
      */
-    public function process(array $construction, Template $filter, array $templateVariables): string
+    private function resolve(array $construction, Template $filter, array $templateVariables): string
     {
         if (empty($templateVariables)) {
             return $construction[0];
@@ -50,6 +54,16 @@ public function process(array $construction, Template $filter, array $templateVa
         }
     }

+    /**
+     * @inheritdoc
+     */
+    public function process(array $construction, Template $filter, array $templateVariables): string
+    {
+        $result = $this->resolve($construction, $filter, $templateVariables);
+
+        return str_replace(['{', '}'], '', (string) $result);
+    }
+
     /**
      * @inheritdoc
      */
--- Filter/DirectiveProcessor/SimpleDirective.php
+++ Filter/DirectiveProcessor/SimpleDirective.php
@@ -68,7 +68,7 @@ public function process(array $construction, Template $filter, array $templateVa
                 ->get($construction['directiveName']);
         } catch (\InvalidArgumentException $e) {
             // This directive doesn't have a SimpleProcessor
-            return $construction[0];
+            return '';
         }

         $parameters = $this->extractParameters($construction, $filter, $templateVariables);
@@ -79,6 +79,8 @@ public function process(array $construction, Template $filter, array $templateVa
             !empty($construction['content']) ? $filter->filter($construction['content']) : null
         );

+        $value = str_replace(['{', '}'], '', (string) $value);
+
         $value = $this->filterApplier->applyFromRawParam(
             $construction['filters'] ?? '',
             $value,
--- Filter/DirectiveProcessor/VarDirective.php
+++ Filter/DirectiveProcessor/VarDirective.php
@@ -55,10 +55,7 @@ public function process(array $construction, Template $filter, array $templateVa
             $result = $this->filterApplier->applyFromRawParam($construction['filters'], $result);
         }

-        $pattern = '/{{.*?}}/';
-        do {
-            $result = preg_replace($pattern, '', (string)$result);
-        } while (preg_match($pattern, $result));
+        $result = str_replace(['{', '}'], '', (string) $result);

         return $result;
     }
